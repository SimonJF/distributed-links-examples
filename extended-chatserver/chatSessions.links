# ChatSessions module -- contains the session types for chat interactions

typename Nickname = String;
typename Message = String;
typename Topic = String;
typename RoomName = String;

typename ConnectError = [| NameInUse | BadRoom |]

# Messages received by a connected client
typename ClientReceive =
  [&| ChatMessage : !(Nickname, Message) . ClientReceive,
      NewUser : !(Nickname) . ClientReceive,
      NewTopic : !(Topic) . ClientReceive,
      UserLeft : !(Nickname) . ClientReceive,
      UserMuted : !(Nickname) . ClientReceive,
      UserUnmuted : !(Nickname) . ClientReceive,
      MakeModerator : ![Nickname] . ClientReceive,
      Kick : End
  |&];

typename ClientSend =
  [+| ChatMessage : !(Message) . ClientSend,
      ChangeTopic : !(Topic). ClientSend,
      Leaving : End |+];

typename ClientConnect =
  ?([RoomName]).!(RoomName, Nickname).
    [&| Joined: ?(Topic, ClientReceive) . ClientSend,
        JoinedAsModerator: ?(Topic, ClientReceive, ModeratorSend). ClientSend,
        Nope: !ConnectError.End
    |&];

typename ModeratorSend  =
  [+| RemoveUser : !(Nickname) . ModeratorSend,
      MuteUser : !(Nickname) . ModeratorSend,
      MakeModerator : !(Nickname) . ModeratorSend |+];

typename ServerAccept = ~ClientConnect;
typename RoomSend = ~ClientReceive;
typename WorkerReceive = ~ClientSend;
typename ModeratorReceive = ~ModeratorSend;


# Access point for communication between workers on server and clients
sig wap : AP(ServerAccept)
var wap = new();
